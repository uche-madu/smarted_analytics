WITH results_summary AS (
    SELECT
        student_id,
        stream,
        grade_level,
        academic_year,
        term,
        
        -- Average score across all subjects in a given term

        {{ calculate_average_score_per_term([
            'english_language', 
            'mathematics', 
            'civic_education',
            'biology',
            'chemistry',
            'physics',
            'further_mathematics',
            'health_education',
            'computer_science',
            'technical_drawing',
            'food_and_nutrition',
            'agricultural_science',
            'financial_accounting',
            'book_keeping',
            'commerce',
            'data_processing',
            'office_practice',
            'typewriting',
            'economics',
            'government',
            'literature_in_english',
            'christian_religion_knowledge',
            'geography',
            'fine_art'
        ]) }} AS average_subject_score_per_term,


        -- Total score for all subjects in a given term
        {{ calculate_total_term_score([
            'english_language', 
            'mathematics', 
            'civic_education',
            'biology',
            'chemistry',
            'physics',
            'further_mathematics',
            'health_education',
            'computer_science',
            'technical_drawing',
            'food_and_nutrition',
            'agricultural_science',
            'financial_accounting',
            'book_keeping',
            'commerce',
            'data_processing',
            'office_practice',
            'typewriting',
            'economics',
            'government',
            'literature_in_english',
            'christian_religion_knowledge',
            'geography',
            'fine_art'
        ]) }} AS overall_term_score,

        -- Count of distinct subjects registered for in a given term
        {{ count_subjects_registered([
            'english_language', 
            'mathematics', 
            'civic_education',
            'biology',
            'chemistry',
            'physics',
            'further_mathematics',
            'health_education',
            'computer_science',
            'technical_drawing',
            'food_and_nutrition',
            'agricultural_science',
            'financial_accounting',
            'book_keeping',
            'commerce',
            'data_processing',
            'office_practice',
            'typewriting',
            'economics',
            'government',
            'literature_in_english',
            'christian_religion_knowledge',
            'geography',
            'fine_art'
        ]) }} AS number_of_subjects_taken_per_term,

        -- Count of subjects passed in a given term
        {{ count_subjects_passed([
            'english_language_pass', 
            'mathematics_pass', 
            'civic_education_pass',
            'biology_pass',
            'chemistry_pass',
            'physics_pass',
            'further_mathematics_pass',
            'health_education_pass',
            'computer_science_pass',
            'technical_drawing_pass',
            'food_and_nutrition_pass',
            'agricultural_science_pass',
            'financial_accounting_pass',
            'book_keeping_pass',
            'commerce_pass',
            'data_processing_pass',
            'office_practice_pass',
            'typewriting_pass',
            'economics_pass',
            'government_pass',
            'literature_in_english_pass',
            'christian_religion_knowledge_pass',
            'geography_pass',
            'fine_art_pass'
        ]) }} AS number_of_subjects_passed_per_term,

        -- Cumulative term average up to current academic period
        {{ cumulative_term_average([
            'english_language_pass', 
            'mathematics_pass', 
            'civic_education_pass',
            'biology_pass',
            'chemistry_pass',
            'physics_pass',
            'further_mathematics_pass',
            'health_education_pass',
            'computer_science_pass',
            'technical_drawing_pass',
            'food_and_nutrition_pass',
            'agricultural_science_pass',
            'financial_accounting_pass',
            'book_keeping_pass',
            'commerce_pass',
            'data_processing_pass',
            'office_practice_pass',
            'typewriting_pass',
            'economics_pass',
            'government_pass',
            'literature_in_english_pass',
            'christian_religion_knowledge_pass',
            'geography_pass',
            'fine_art_pass'
        ]) }} AS cumulative_term_average,
        COUNT(CASE WHEN wassce_pass = 'Pass' THEN 1 ELSE NULL END) AS total_wassce_pass_terms
    FROM {{ ref('dim_results') }}
    GROUP BY student_id, stream, grade_level, academic_year, term
)









WITH student_gender_performance AS (
    SELECT
        ds.student_id,
        ds.gender,
        AVG(rs.english_language_total) AS avg_english_score,
        AVG(rs.mathematics_total) AS avg_math_score,
        AVG(rs.biology_total) AS avg_biology_score,
        AVG(rs.chemistry_total) AS avg_chemistry_score,
        COUNT(CASE WHEN rs.english_language_pass = 'Pass' THEN 1 ELSE NULL END) AS english_pass_count,
        COUNT(CASE WHEN rs.mathematics_pass = 'Pass' THEN 1 ELSE NULL END) AS math_pass_count,
        COUNT(CASE WHEN rs.biology_pass = 'Pass' THEN 1 ELSE NULL END) AS biology_pass_count
    FROM {{ ref('dim_students') }} ds
    LEFT JOIN {{ ref('dim_results') }} dr ON ds.student_id = rs.student_id
    GROUP BY ds.student_id, ds.gender
)


WITH student_age_performance AS (
    SELECT
        ds.student_id,
        ds.age,
        AVG(rs.overall_term_score) AS avg_term_score,
        COUNT(CASE WHEN rs.wassce_pass = 'WASSCE Pass' THEN 1 ELSE NULL END) AS total_wassce_pass
    FROM {{ ref('dim_students') }} ds
    LEFT JOIN results_summary rs ON ds.student_id = rs.student_id
    GROUP BY ds.student_id, ds.age
)

WITH blood_group_absenteeism_correlation AS (
    SELECT
        ds.blood_group,
        AVG(dr.aggregate_attendance_percentage) AS avg_attendance,
        COUNT(CASE WHEN dr.aggregate_attendance_percentage < 60 THEN 1 ELSE NULL END) AS low_attendance_count
    FROM {{ ref('dim_students') }} ds
    LEFT JOIN {{ ref('dim_results') }} dr ON ds.student_id = dr.student_id
    GROUP BY ds.blood_group
)


WITH stream_extracurricular_participation AS (
    SELECT
        ds.stream,
        COUNT(CASE WHEN dea.student_id IS NOT NULL THEN 1 ELSE NULL END) AS students_involved_in_activities,
        COUNT(ds.student_id) AS total_students
    FROM {{ ref('dim_students') }} ds
    LEFT JOIN {{ ref('dim_extracurricular_activities') }} dea ON ds.student_id = dea.student_id
    GROUP BY ds.stream
)


WITH blood_group_absenteeism_correlation AS (
    SELECT
        ds.blood_group,
        AVG(dr.aggregate_attendance_percentage) AS avg_attendance,
        COUNT(CASE WHEN dr.aggregate_attendance_percentage < 60 THEN 1 ELSE NULL END) AS low_attendance_count
    FROM {{ ref('dim_students') }} ds
    LEFT JOIN {{ ref('dim_results') }} dr ON ds.student_id = dr.student_id
    GROUP BY ds.blood_group
)




WITH genotype_health_impact AS (
    SELECT
        ds.genotype,
        AVG(dr.aggregate_attendance_percentage) AS avg_attendance,
        COUNT(CASE WHEN dh.admitted = TRUE THEN 1 ELSE NULL END) AS total_hospital_admissions,
        COUNT(CASE WHEN dh.follow_up_visits > 0 THEN 1 ELSE NULL END) AS follow_up_visits_count
    FROM {{ ref('dim_students') }} ds
    LEFT JOIN {{ ref('dim_health_records') }} dh ON ds.student_id = dh.student_id
    LEFT JOIN {{ ref('dim_results') }} dr ON ds.student_id = dr.student_id
    GROUP BY ds.genotype
)

